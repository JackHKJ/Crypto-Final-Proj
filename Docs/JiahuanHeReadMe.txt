  For our Data Encryption Standard, instead of using the S-DES we have implemented in hw1, with the help of L1.2.pdf, from page 55 to page 69, and Sbox, permutation and reduction table found on "https://academic.csuohio.edu/yuc/security/Chapter_06_Data_Encription_Standard.pdf",  I implemented a standard DES with 64-bits length and 16 iterations.
  First, I implemented the XOR, reduction, permutation, leftshift and Sbox functions, which process the bit change or calculation processes and return the result. Then, I combined the functions together to calculate the keys of each iteration. Next, I used the formula given on L1.2.pdf: Li= Ri–1 & Ri= Li–1 xor F(Ri–1, Ki) for the encryption function. Finnally, I implemented the decryption function passing the (16-i)-th key to the F function in the i-th iteration.
  This DES is much safer and more complex compared with S-DES. The 16 round encryption, 8 4*16 Sboxes and 64 bit key length makes the differential cryptanalysis very inefficient, thus the key is quite unlikely to be broken.
  In addition, I added Cipher Block Chaining to the encryption for messages longer than 64 bits. Each ciphertext block depends on all message blocks so the cipher is even harder to break.